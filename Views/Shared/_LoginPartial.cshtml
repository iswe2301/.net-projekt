@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<!-- Om användaren är inloggad -->
@if (SignInManager.IsSignedIn(User))
{
    <ul class="navbar-nav flex-column align-items-end signed-in">
        <li class="nav-item text-white text-end w-100">
            <small class="d-block mb-1">
                <a class="text-white text-decoration-none" asp-area="Identity" asp-page="/Account/Manage/Index"
                    title="Manage">
                    <!-- Skriv ut epostadress -->
                    <em class="bi bi-person-circle"></em> Hej, @User.Identity?.Name!
                </a>
            </small>
        </li>
        <li class="nav-item mb-2">
            <!-- Logga ut-funktionalitet med identity  -->
            <form asp-area="Identity" asp-page="/Account/Logout"
                asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="btn btn-outline-light btn-sm">
                    <em class="bi bi-box-arrow-right"></em> Logga ut
                </button>
            </form>
        </li>
    </ul>
}
else
{
    <!-- Om användaren inte är inloggad -->
    <ul class="navbar-nav d-flex align-items-center">
        <li class="nav-item">
            <!-- Länkar till registrering och inloggning med aktiv styling -->
            <a class="nav-link @(ViewContext.RouteData.Values["Page"]?.ToString() == "/Account/Register" ? "active" : "")"
                asp-area="Identity" asp-page="/Account/Register">
                <em class="bi bi-person-plus"></em> Registrera
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link @(ViewContext.RouteData.Values["Page"]?.ToString() == "/Account/Login" ? "active" : "")"
                asp-area="Identity" asp-page="/Account/Login">
                <em class="bi bi-box-arrow-in-right"></em> Logga in
            </a>
        </li>
    </ul>
}