<!-- Paket f√∂r att kunna anv√§nda paginering -->
@using X.PagedList.Mvc.Core
@using X.PagedList

<!-- Anv√§nd modellen IPagedList f√∂r att kunna anv√§nda paginering -->
@model IPagedList<TechStock.Models.Product>

@{
    ViewData["Title"] = "Produkter";
}

<h2>Produkter</h2>

<p>
    <a asp-action="Create">L√§gg till produkt</a>
</p>

<!-- S√∂k och filtrering inom ett formul√§r -->
<form id="filterForm" asp-action="Products" method="get" class="mb-3">
    <div class="input-group mb-3">
        <!-- S√∂kstr√§ng f√∂r produktnamn eller artikelnummer -->
        <input type="text" name="searchString" id="searchInput" class="form-control" placeholder="S√∂k efter produktnamn eller artikelnummer..."
               value="@(ViewBag.CurrentSearch ?? null)" />
        <button type="submit" class="btn btn-primary">S√∂k</button>
    </div>

    <!-- Filtrering f√∂r kategori -->
    <div class="row mb-4">
        <div class="col-md-3">
            <label for="categoryId">Kategori</label>
            <select name="categoryId" id="categoryId" class="form-select">
                <option value="">Alla kategorier</option>
                <!-- Loopar igenom alla kategorier och skapar en option f√∂r varje kategori -->
                @if (ViewData["Categories"] is List<Category> categories)
                {
                        @foreach (var category in categories)
                        {
                            <option value="@category.Id" selected="@(category.Id == ViewBag.CurrentCategory ? "selected" : null)">
                                @category.Name
                            </option>
                    }
            }
            </select>
        </div>

        <div class="col-md-3">
            <label for="brandId">Varum√§rke</label>
            <select name="brandId" id="brandId" class="form-select">
                <option value="">Alla varum√§rken</option>
                <!-- Loopar igenom alla varum√§rken och skapar en option f√∂r varje varum√§rke -->
                @if (ViewData["Brands"] is List<Brand> brands)
                {
                        @foreach (var brand in brands)
                    {
                            <option value="@brand.Id" selected="@(brand.Id == ViewBag.CurrentBrand ? "selected" : null)">
                                @brand.Name
                            </option>
                    }
            }
            </select>
        </div>

        <div class="col-md-3">
                <label for="stockStatus">Lagerstatus</label>
                <select name="stockStatus" id="stockStatus" class="form-select">
                    <option value="">Alla lagerstatusar</option>
                    <!-- Skapar en option f√∂r varje lagerstatus och s√§tter selected om det √§r den aktuella lagerstatusen -->
                    <option value="inStock" selected="@(ViewBag.CurrentStockStatus == "inStock" ? "selected" : null)">I lager</option>
                    <option value="lowStock" selected="@(ViewBag.CurrentStockStatus == "lowStock" ? "selected" : null)">F√• kvar</option>
                    <option value="outOfStock" selected="@(ViewBag.CurrentStockStatus == "outOfStock" ? "selected" : null)">Slut i lager</option>
                </select>
        </div>

<!-- √Öterst√§llningsknapp/l√§nk som anropar products-metoden vid klick -->
        <div class="col-md-3 d-flex align-items-end">
            <a href="@Url.Action("Products")" class="btn btn-danger ms-3">√Öterst√§ll filtrering</a>
        </div>
    </div>
</form>

<!-- Tabell med alla produkter -->
<table class="table">
    <thead>
        <tr>
             <th>
                <!-- L√§nk f√∂r att sortera efter lagerstatus, h√§mta ordning fr√•n ViewBag -->
                <a asp-action="Products" asp-route-sortOrder="@ViewBag.StockStatusSort">
                    @Html.DisplayNameFor(model => model.First().StockStatus)
                    <!-- √Ñndra ikon beroende p√• vilken sortering som anv√§nds -->
                    @if (ViewBag.CurrentSort == "stockstatus_asc")
                    {
                            <span>üîº</span>
                    }
                    else if (ViewBag.CurrentSort == "stockstatus_desc")
                    {
                            <span>üîΩ</span>
                    }
                    else
                    {
                            <span>‚ÜïÔ∏è</span>
                            // Default-ikon
                    }
                </a>
            </th>
            <th>
                <a asp-action="Products" asp-route-sortOrder="@ViewBag.ArticleNumberSort">
                    @Html.DisplayNameFor(model => model.First().ArticleNumber)
                    @if (ViewBag.CurrentSort == "articlenumber_asc")
                    {
                            <span>üîº</span>
                    }
                    else if (ViewBag.CurrentSort == "articlenumber_desc")
                    {
                            <span>üîΩ</span>
                    }
                    else
                    {
                            <span>‚ÜïÔ∏è</span>
                    }
                </a>
            </th>
            <th>
                <a asp-action="Products" asp-route-sortOrder="@ViewBag.NameSort">
                    @Html.DisplayNameFor(model => model.First().Name)
                    @if (ViewBag.CurrentSort == "name_asc")
                    {
                            <span>üîº</span>
                    }
                    else if (ViewBag.CurrentSort == "name_desc")
                    {
                            <span>üîΩ</span>
                    }
                    else
                    {
                            <span>‚ÜïÔ∏è</span>
                    }
                </a>
            </th>
            <th>
                <a asp-action="Products" asp-route-sortOrder="@ViewBag.PriceSort">
                    @Html.DisplayNameFor(model => model.First().Price)
                    @if (ViewBag.CurrentSort == "price_asc")
                    {
                            <span>üîº</span>
                    }
                    else if (ViewBag.CurrentSort == "price_desc")
                    {
                            <span>üîΩ</span>
                    }
                    else
                    {
                            <span>‚ÜïÔ∏è</span>
                    }
                </a>
            </th>
            <th>
                <a asp-action="Products" asp-route-sortOrder="@ViewBag.StockQuantitySort">
                    @Html.DisplayNameFor(model => model.First().StockQuantity)
                    @if (ViewBag.CurrentSort == "stockquantity_asc")
                    {
                            <span>üîº</span>
                    }
                    else if (ViewBag.CurrentSort == "stockquantity_desc")
                    {
                            <span>üîΩ</span>
                    }
                    else
                    {
                            <span>‚ÜïÔ∏è</span>
                    }
                </a>
            </th>
            <th>
                <a asp-action="Products" asp-route-sortOrder="@ViewBag.CategorySort">
                    @Html.DisplayNameFor(model => model.First().Category.Name)
                    @if (ViewBag.CurrentSort == "category_asc")
                    {
                            <span>üîº</span>
                    }
                    else if (ViewBag.CurrentSort == "category_desc")
                    {
                            <span>üîΩ</span>
                    }
                    else
                    {
                            <span>‚ÜïÔ∏è</span>
                    }
                </a>
            </th>
            <th>
                <a asp-action="Products" asp-route-sortOrder="@ViewBag.BrandSort">
                    @Html.DisplayNameFor(model => model.First().Brand.Name)
                    @if (ViewBag.CurrentSort == "brand_asc")
                    {
                            <span>üîº</span>
                    }
                    else if (ViewBag.CurrentSort == "brand_desc")
                    {
                            <span>üîΩ</span>
                    }
                    else
                    {
                            <span>‚ÜïÔ∏è</span>
                    }
                </a>
            </th>
            <th>√Ötg√§rder</th>
        </tr>
    </thead>
    <tbody>
        <!-- Meddelande om inga produkter hittades -->
        @if (Model.Count == 0)
        {
                <tr>
                    <td colspan="8" class="text-center">Inga produkter hittades...</td>
                </tr>
        }
        <!-- Loopar igenom alla produkter och visar dem i tabellen -->
@foreach (var item in Model)
{
                    <tr class="product-item" data-name="@item.Name.ToLower()" data-articlenumber="@item.ArticleNumber.ToLower()">
                        <td>
                            @Html.DisplayFor(modelItem => item.StockStatus)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ArticleNumber)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Price)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.StockQuantity)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Category.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Brand.Name)
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id">Redigera</a> |
                            <a asp-action="Details" asp-route-id="@item.Id">Detaljer</a> |
                            <a asp-action="Delete" asp-route-id="@item.Id">Radera</a>
                        </td>
                    </tr>
}
    </tbody>
</table>

<!-- Sidr√§knare om det finns minst 1 sida -->
@if (Model.Count > 0)
{
        <div class="text-center mb-2">
            <strong>Sida @Model.PageNumber av @Model.PageCount</strong>
        </div>
}

<!-- Paginering -->
<div class="d-flex justify-content-center mt-3">
    <!-- Skickar med s√∂kstr√§ng och filtrering till pagineringen -->
    @Html.PagedListPager(Model, page => Url.Action("", "produkter", new { sida = page, searchString = Context.Request.Query["searchString"], categoryId = Context.Request.Query["categoryId"], brandId = Context.Request.Query["brandId"], stockStatus = Context.Request.Query["stockStatus"] }),
        new PagedListRenderOptions
        {
                DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded, // Visa l√§nk till f√∂rsta sidan om det finns fler √§n 5 sidor
                DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded, // Visa l√§nk till sista sidan om det finns fler √§n 5 sidor
                DisplayLinkToPreviousPage = PagedListDisplayMode.Always, // Visa alltid l√§nk till f√∂reg√•ende sida
                DisplayLinkToNextPage = PagedListDisplayMode.Always, // Visa alltid l√§nk till n√§sta sida
                MaximumPageNumbersToDisplay = 5, // Max antal sidnummer som visas
                Display = PagedListDisplayMode.IfNeeded, // Visa paginering om det finns fler √§n 1 sida
            
                // CSS-klasser
                UlElementClasses = new[] { "pagination" },
                LiElementClasses = new[] { "page-item" },
                PageClasses = new[] { "page-link" },

                // Text f√∂r l√§nkar
                LinkToPreviousPageFormat = "F√∂reg√•ende",
                LinkToNextPageFormat = "N√§sta",
                LinkToFirstPageFormat = "¬´ F√∂rsta",
                LinkToLastPageFormat = "Sista ¬ª"
        })
</div>