<!-- Paket för att kunna använda paginering -->
@using X.PagedList.Mvc.Core
@using X.PagedList

<!-- Använd modellen IPagedList för att kunna använda paginering -->
@model IPagedList<TechStock.Models.Product>

@{
    ViewData["Title"] = "Produkter";
}

<h2>Produkter</h2>

<p>
    <a asp-action="Create">Lägg till produkt</a>
</p>

<!-- Sökfunktion -->
<form asp-action="Index" method="get" class="mb-3">
    <div class="input-group">
        <!-- Sätter searchString till det som användaren skriver in i sökfältet -->
        <input type="text" name="searchString" class="form-control" placeholder="Sök efter produktnamn eller artikelnummer..."
               value="@Context.Request.Query["searchString"]" />
        <button type="submit" class="btn btn-primary">Sök</button>
        <a href="@Url.Action("Index")" class="btn btn-secondary">Rensa</a>
    </div>
</form>

<!-- Tabell med alla produkter -->
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().StockStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().ArticleNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().StockQuantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Brand)
            </th>
            <th>Åtgärder</th>
        </tr>
    </thead>
    <tbody>
        <!-- Loopar igenom alla produkter och visar dem i tabellen -->
@foreach (var item in Model)
{
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.StockStatus)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ArticleNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StockQuantity)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Brand.Name)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Redigera</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Detaljer</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Radera</a>
                    </td>
                </tr>
}
    </tbody>
</table>

<!-- Sidräknare ovanför pagineringen -->
<div class="text-center mb-2">
    <strong>Sida @Model.PageNumber av @Model.PageCount</strong>
</div>
<!-- Paginering -->
<div class="d-flex justify-content-center mt-3">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchString = Context.Request.Query["searchString"] }),
        new PagedListRenderOptions
        {
            DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded, // Visa länk till första sidan om det finns fler än 5 sidor
            DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded, // Visa länk till sista sidan om det finns fler än 5 sidor
            DisplayLinkToPreviousPage = PagedListDisplayMode.Always, // Visa alltid länk till föregående sida
            DisplayLinkToNextPage = PagedListDisplayMode.Always, // Visa alltid länk till nästa sida
            MaximumPageNumbersToDisplay = 5, // Max antal sidnummer som visas
            Display = PagedListDisplayMode.IfNeeded, // Visa paginering om det finns fler än 1 sida
            
            // CSS-klasser
            UlElementClasses = new[] { "pagination" },
            LiElementClasses = new[] { "page-item" },
            PageClasses = new[] { "page-link" },

            // Text för länkar
            LinkToPreviousPageFormat = "Föregående",
            LinkToNextPageFormat = "Nästa",
            LinkToFirstPageFormat = "« Första",
            LinkToLastPageFormat = "Sista »"
        })
</div>